#!/bin/bash

echo "============================"
echo "üì¶ –¢–∏–ø—ã —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±—É—Ñ–µ—Ä–∞"
echo "============================"

osascript -l JavaScript <<'EOF'
ObjC.import('AppKit');
ObjC.import('Foundation');

function decodeData(data, type) {
    if (!data) return "(–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)";
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç
    let string = ObjC.unwrap($.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding));
    if (string) {
        return string;
    }

    // –ï—Å–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç ‚Äî –≤–µ—Ä–Ω—É—Ç—å hex-–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ (–ø–µ—Ä–≤—ã–µ –±–∞–π—Ç—ã)
    let len = Math.min(data.length, 64); // –ø–µ—Ä–≤—ã–µ 64 –±–∞–π—Ç–∞
    let buffer = data.bytes;
    let hex = [];
    for (let i = 0; i < len; i++) {
        hex.push(('00' + buffer[i].toString(16)).slice(-2));
    }
    return hex.join(' ');
}

var pb = $.NSPasteboard.generalPasteboard;
var types = pb.types;

for (var i = 0; i < types.count; i++) {
    var type = types.objectAtIndex(i);
    var typeStr = ObjC.unwrap(type);
    var data = pb.dataForType(type);
    var content = decodeData(data, typeStr);

    console.log("----- " + typeStr + " -----");
    console.log(content);
    console.log();
}
EOF
